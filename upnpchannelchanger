#!/usr/bin/env bash

# Basic Settings
COMMAND=$1
HOST=$2
CHANNEL=$3
PORT='49200'
QUERY='upnp/control/EchoSTB2'
SERVICE='urn:schemas-echostar-com:service:EchoSTB:2'

#Action to wake up a sleeping STB
WAKE_ACTION='WakeUp'
WAKE_ARGS='<Tuner>0</Tuner>'

#Action to change the channel
CHANGE_ACTION='SetChannel'
CHANGE_ARGS="<Tuner>0</Tuner><Channel>${CHANNEL}</Channel>"

#Disable Inactivity Standby
INACTIVE_ACTION='InactivityStandby'
INACTIVE_ARGS='<Enable_disable>Disable</Enable_disable><hours_4_to_8>8</hours_4_to_8>'

upnp_send()
{
	local HOST=$1
	local ACTION=$2
	local UPNP_ARGS=$3

	# prepare SOAP message
	local CR=$'\r'
	local MESSAGE='<?xml version="1.0" encoding="utf-8"?>
<s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/"
s:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
<s:Body>
<u:'${ACTION}' xmlns:u="'${SERVICE}'">'${UPNP_ARGS}'</u:'${ACTION}'>
</s:Body>
</s:Envelope>'

        echo Message is:
        echo ${MESSAGE}
        echo Message size is ${#MESSAGE}

	exec 6<>/dev/tcp/$HOST/$PORT || {
		echo "error: can not connect to $HOST:$PORT" >&2
		return 1
	}

	cat <<EOF >&6
POST /$QUERY HTTP/1.0$CR
Host: $HOST:$PORT$CR
SOAPAction: "${SERVICE}#${ACTION}"$CR
Content-Type: text/xml; charset="utf-8"$CR
Content-Length: ${#MESSAGE}$CR
$CR
$MESSAGE
EOF

	#Uncomment to debug
	cat <&6

	exec 6<&-
	exec 6>&-
}


# Main program execution begin...now...

if [ "${COMMAND}" = "--custom" ]; then
  echo "Executing a custom command now..."

  ACTION='GetChannelInfo'
  ARGS='<Tuner>0</Tuner>'

  upnp_send ${HOST} ${ACTION} ${ARGS}
  echo "Done executing a custom command."
  exit 0
fi


if [ $# -eq 0 ] || [ ${COMMAND} = '-h' ] ; then
  echo 'Usage: upnpchannelchanger COMMAND STB_IP Channel#'
  echo 'Example: upnpchannelchanger --change 10.0.0.123 9475'

  echo 'Example: upnpchannelchanger --wakeup 10.0.0.123'
  echo 'Example: upnpchannelchanger --disable-inactivity 10.0.0.123'

  exit 0
fi

if [ "${COMMAND}" == "--wakeup" ]; then
  echo Waking up the STB...
  #Wake the STB up
  upnp_send $HOST $WAKE_ACTION $WAKE_ARGS
  echo It has risen.
  exit 0
fi

if [ "${COMMAND}" == "--disable-inactivity" ]; then
  echo Disabling inactivity timeout...
  #Disabled the inactivity timeout
  upnp_send $HOST $INACTIVE_ACTION $INACTIVE_ARGS
  echo Command sent, we should no longer timeout.
  exit 0
fi

if [ "${COMMAND}" == "--disable-updates" ]; then
  echo Disabling updates...

  ACTION='Updates'
  ARGS='<Enable_disable>Disable</Enable_disable><hour>07</hour><min>58</min><am_or_pm>am</am_or_pm>'

  upnp_send ${HOST} ${ACTION} ${ARGS}
  echo Command sent, no mo updates.
  exit 0
fi

if [ "${COMMAND}" == "--change" ]; then
  echo 'Time to change the to channel ${CHANNEL}'

  #Wake the STB up
  upnp_send $HOST $WAKE_ACTION $WAKE_ARGS

  #Wait for it to wake up
  sleep .7

  #Change the channel
  upnp_send $HOST $CHANGE_ACTION $CHANGE_ARGS

  sleep .1

  #Disabled the inactivity timeout
  upnp_send $HOST $INACTIVE_ACTION $INACTIVE_ARGS

  #Sleep to allow the STB time to settle before the tuner tries to access (HD-PVR)
  sleep .1

  echo 'Done changing the channel.'
fi
